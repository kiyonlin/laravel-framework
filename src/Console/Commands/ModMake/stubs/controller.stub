<?php

namespace DummyNamespace;

use Kiyon\Laravel\Foundation\Routing\Controller;
use DummyRootNamespace\Model\DummyModel;
use DummyRootNamespace\Request\DummyModelRequest;
use DummyRootNamespace\Service\DummyModelService;

class DummyClass extends Controller
{
    /** @var DummyModelService */
    protected $service;

    public function __construct(DummyModelService $service)
    {
        $this->service = $service;
    }

    /**
     * @return \Illuminate\Http\JsonResponse
     */
    public function index()
    {
        $DummyItemPlural = $this->service->repo->all();

        return $this->respond($DummyItemPlural);
    }

    /**
     * @param DummyModelRequest $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(DummyModelRequest $request)
    {
        $data = request()->all();

        $DummyItem = $this->service->repo->create($data);

        return $this->respondCreated($DummyItem);
    }

    /**
     * @param DummyModel $DummyItem
     * @return \Illuminate\Http\JsonResponse
     */
    public function edit(DummyModel $DummyItem)
    {
        $DummyItem = $this->service->repo->edit($DummyItem);

        return $this->respond($DummyItem);
    }

    /**
     * @param DummyModel $DummyItem
     * @param DummyModelRequest $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function update(DummyModel $DummyItem, DummyModelRequest $request)
    {
        $data = request()->all();

        $DummyItem = $this->service->repo->update($DummyItem, $data);

        return $this->respond($DummyItem);
    }

    /**
     * @param DummyModel $DummyItem
     * @return \Illuminate\Http\JsonResponse
     * @throws \Exception
     */
    public function destroy(DummyModel $DummyItem)
    {
        $data = request()->all();

        $this->service->repo->destroy($DummyItem, $data);

        return $this->respondNoContent();
    }
}
